%% loading data. 
X_100_nominal = load('response100.mat');
X_100_global_T = load('response100_param_T_global.mat');
% num_cars = 100;
%% setting up the road section and the disretization of the road section 
% road_section_length = 500; % for the 500 cars. 
% road_sectionX = 0:road_section_length:14000;  % create a road section along the x-axis.

road_section_length = 200;
road_sectionX = 0:road_section_length:6000; % for the others

%% First DEMo 100 cars  number of cars and velocity side by side.
% flow and density should be on the right hand side. 
Xresponse = X_100_nominal.Xresponse;
num_cars = X_100_nominal.num_cars;


figure()

max_scale_cong = 13;
max_scale_velc = max(max(Xresponse(num_cars+1:end, :)));
for t_iter = t_start:t_stop
    t_iter = t_iter/timestep;
    if t_iter == 0
        t_iter = 1;
    end
    subplot(1, 2, 1)
    cars_on_road = howmanycars(Xresponse, num_cars, road_sectionX, t_iter, road_section_length);
    hbl_congestion = heatmap(cars_on_road);
    hbl_congestion.GridVisible = 'off';
    hbl_congestion.Colormap = cool;
    hbl_congestion.CellLabelColor = 'none';
    hbl_congestion.XData = road_sectionX;
    hbl_congestion.YData = ['lane'];
    hbl_congestion.XLabel = 'Distance along the road section [m]';
    hbl_congestion.Title = 'Heat map of number of cars along 200 m road sections';
%     hbl_congestion.YLabel = '
    caxis(hbl_congestion, [0, max_scale_cong]); % fixing the color scheme so that it doesn't change. 

    subplot(1, 2, 2)
    cars_on_road = velocityheatmap(Xresponse, num_cars, road_sectionX, t_iter, road_section_length);
    hbl_velc = heatmap(cars_on_road);
    hbl_velc.GridVisible = 'off';
    hbl_velc.Colormap = cool;
    hbl_velc.CellLabelColor = 'none';
    hbl_velc.XData = road_sectionX;
    hbl_velc.YData = ['lane'];
    hbl_velc.XLabel = 'Distance along the road section [m]';
    hbl_velc.Title = 'Heatmap of velocity of cars along 200 m road sections';
    caxis(hbl_velc, [0, max_scale_velc]); % fixing the color scheme so that it doesn't change. 

    drawnow
end


%% Second DEMO 100 cars density and flow side by side.
Xresponse = X_100_nominal.Xresponse;
num_cars = X_100_nominal.num_cars;


figure()

max_scale_density = 0.065;
max_scale_flow = 0.65;
for t_iter = t_start:t_stop
    t_iter = t_iter/timestep;
    if t_iter == 0
        t_iter = 1;
    end
    subplot(1, 2, 1)
    cars_on_road = howmanycars(Xresponse, num_cars, road_sectionX, t_iter, road_section_length)/road_section_length;
    hbl_density = heatmap(cars_on_road);
    hbl_density.GridVisible = 'off';
    hbl_density.Colormap = cool;
    hbl_density.CellLabelColor = 'none';
    hbl_density.XData = road_sectionX;
    hbl_density.YData = ['lane'];
    hbl_density.XLabel = 'Distance along the road section [m]';
    hbl_density.Title = 'Heat map of density of cars along 200 m road sections';
    caxis(hbl_density, [0, max_scale_density]); % fixing the color scheme so that it doesn't change. 

    subplot(1, 2, 2)
    veloc_on_road = velocityheatmap(Xresponse, num_cars, road_sectionX, t_iter, road_section_length);
    flow_cars = cars_on_road.*veloc_on_road;
    hbl_flow = heatmap(flow_cars);
    hbl_flow.GridVisible = 'off';
    hbl_flow.Colormap = cool;
    hbl_flow.CellLabelColor = 'none';
    hbl_flow.XData = road_sectionX;
    hbl_flow.YData = ['lane'];
    hbl_flow.XLabel = 'Distance along the road section [m]';
    hbl_flow.Title = 'Heatmap of flow of cars along 200 m road sections';
    caxis(hbl_flow, [0, max_scale_flow]); % fixing the color scheme so that it doesn't change. 

    drawnow
end

%% Third DEMO for the different parameters. Density heatmaps for different T

Xresponse = X_100_nominal.Xresponse;
num_cars = X_100_nominal.num_cars;
Xparam = X_100_global_T.Xresponse;
num_cars2 = X_100_global_T.num_cars;

figure()

max_scale_density_nominal = 0.065;
max_scale_density_param = 0.08;
% max_scale_flow = 0.65;
for t_iter = t_start:t_stop
    t_iter = t_iter/timestep;
    if t_iter == 0
        t_iter = 1;
    end
    subplot(1, 2, 1)
    cars_on_road = howmanycars(Xresponse, num_cars, road_sectionX, t_iter, road_section_length)/road_section_length;
    hbl_density_nominal = heatmap(cars_on_road);
    hbl_density_nominal.GridVisible = 'off';
    hbl_density_nominal.Colormap = cool;
    hbl_density_nominal.CellLabelColor = 'none';
    hbl_density_nominal.XData = road_sectionX;
    hbl_density_nominal.YData = ['lane'];
    hbl_density_nominal.XLabel = 'Distance along the road section [m]';
    hbl_density_nominal.Title = 'Heat map of density of cars along 200 m road sections';
    caxis(hbl_density_nominal, [0, max_scale_density_nominal]); % fixing the color scheme so that it doesn't change. 

    subplot(1, 2, 2)
    cars_on_road = howmanycars(Xresponse, num_cars, road_sectionX, t_iter, road_section_length)/road_section_length;
    hbl_density_param = heatmap(cars_on_road);
    hbl_density_param.GridVisible = 'off';
    hbl_density_param.Colormap = cool;
    hbl_density_param.CellLabelColor = 'none';
    hbl_density_param.XData = road_sectionX;
    hbl_density_param.YData = ['lane'];
    hbl_density_param.XLabel = 'Distance along the road section [m]';
    hbl_density_param.Title = 'Heat map of density of cars along 200 m road sections with T = 4';
    caxis(hbl_density_param, [0, max_scale_density_nominal]); % fixing the color scheme so that it doesn't change. 

    drawnow
end


%%
% For congestion.
% max_scale_cong = num_cars*0.08; % for 500 cars.
% % max_scale_cong = num_cars*3/4; % for others
% for t_iter = t_start:t_stop
%     t_iter = t_iter/timestep;
%     if t_iter == 0
%         t_iter = 1;
%     end
%     
%     cars_on_road = howmanycars(Xresponse, num_cars, road_sectionX, t_iter, road_section_length);
%     hbl_congestion = heatmap(cars_on_road);
%     hbl_congestion.GridVisible = 'off';
%     hbl_congestion.Colormap = cool;
%     hbl_congestion.CellLabelColor = 'none';
%     hbl_congestion.XData = road_sectionX;
%     hbl_congestion.YData = ['lane'];
%     hbl_congestion.XLabel = 'Distance along the road section [m]';
%     caxis(hbl_congestion, [0, max_scale_cong]); % fixing the color scheme so that it doesn't change. 
% 
%     
%     drawnow
% end
% 
%     
% %% For velocity heatmaps
% 
% % avg_velc = velocityheatmap(X, num_cars, road_sectionX, 5);
% max_scale_velc = max(max(Xresponse(num_cars+1:end, :)));
% for t_iter = t_start:0.5:t_stop
%     t_iter = t_iter/timestep;
%     if t_iter == 0
%         t_iter = 1;
%     end
%     
%     cars_on_road = velocityheatmap(Xresponse, num_cars, road_sectionX, t_iter, road_section_length);
%     hbl_velc = heatmap(cars_on_road);
%     hbl_velc.GridVisible = 'off';
%     hbl_velc.Colormap = cool;
%     hbl_velc.CellLabelColor = 'none';
%     hbl_velc.XData = road_sectionX;
%     hbl_velc.YData = ['lane'];
%     hbl_velc.XLabel = 'Distance along the road section [m]';
%     caxis(hbl_velc, [0, max_scale_velc]); % fixing the color scheme so that it doesn't change. 
%     drawnow;
% end



%% heatmap snapshot congestion
% figure(1)
% cars_on_road = howmanycars(Xresponse, num_cars, road_sectionX, 1, road_section_length);
% hbl_congestion = heatmap(cars_on_road);
% hbl_congestion.GridVisible = 'off';
% hbl_congestion.Colormap = cool;
% hbl_congestion.CellLabelColor = 'none';
% hbl_congestion.XData = road_sectionX;
% hbl_congestion.YData = ['Lane'];
% hbl_congestion.XLabel = 'Distance along the road section [m]';
% %%
